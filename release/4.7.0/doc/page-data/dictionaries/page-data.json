{"componentChunkName":"component---node-modules-carrotsearch-gatsby-theme-apidocs-templates-documentation-page-js","path":"/dictionaries/","result":{"data":{"site":{"siteMetadata":{"title":"Carrot2 docs","description":"User and developer manual for the Carrot2 text clustering engine.","lang":"en","indexAlias":"/hello-carrot2/"}},"html":{"frontmatter":{"id":"dictionaries","title":"Dictionaries"},"html":"<article>\n  <h1>Dictionaries</h1>\n\n  <p id=\"65911b58\">\n    Dictionaries help Carrot<sup>2</sup> to improve the quality of clustering\n    for a specific language. This section discusses the available dictionaries and\n    ways of tuning them to match the content you cluster.\n  </p>\n\n  <p id=\"d6c3fc46\">\n    A dictionary defines a set of words or phrases that should be ignored when\n    clustering content in a specific language. Carrot<sup>2</sup> comes\n    with basic dictionary files for all the supported languages. Additionally,\n    you can provide per-request dictionaries in the REST API and configure\n    ephemeral dictionaries using Java API.\n  </p>\n\n  <section id=\"types-of-dictionaries\">\n    <h2>\n        <a class=\"anchor\" href=\"#types-of-dictionaries\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Types of dictionaries\n      </h2>\n    \n    <p id=\"types-of-dictionaries:5f69b180\">\n      Carrot<sup>2</sup> supports two types of dictionaries:\n    </p>\n\n    <dl>\n      <dt>Word filters</dt>\n      <dd>\n        <p id=\"types-of-dictionaries:efe405b3\">\n          The set of words, commonly known as <em>stop words</em>, that should be ignored during clustering.\n          Typically, word filters would contain function words, such as\n          <em>of</em> or <em>between</em>.\n        </p>\n\n        <p id=\"types-of-dictionaries:bc9139e7\">\n          If a word is filtered out, it will not have influence on the clusters\n          the algorithm creates, but may still appear in cluster labels, such as\n          <em>University of Washington</em>, to aid readability.\n        </p>\n\n        <p id=\"types-of-dictionaries:c5067dde\">\n          Word filters are stored in the <a href=\"#syntax\">JSON syntax</a> for each language separately\n          in a file named <strong><em>lang</em>.word-filters.json</strong>, where <em>lang</em>\n          is the name of the language, for example <strong>english.word-filters.json</strong>.\n          <a href=\"#location-of-dictionary-files\">Location of the dictionary files</a> is\n          application-specific.\n        </p>\n      </dd>\n\n      <dt>Label filters</dt>\n      <dd>\n        <p id=\"types-of-dictionaries:779ff69a\">\n          The set of words or phrases that must not be used as cluster labels.\n          You can use label filters to suppress offensive or non-informative\n          labels, such as <em>Official website</em>.\n        </p>\n\n        <p id=\"types-of-dictionaries:106091cc\">\n          Label filters are stored in the <a href=\"#syntax\">JSON syntax</a> for each language separately\n          in a file named <strong><em>lang</em>.label-filters.json</strong>, where <em>lang</em>\n          is the name of the language, for example <strong>english.label-filters.json</strong>.\n          <a href=\"#location-of-dictionary-files\">Location of the dictionary files</a> is\n          application-specific.\n        </p>\n      </dd>\n    </dl>\n  </section>\n\n  <section id=\"location-of-dictionary-files\">\n    <h2>\n        <a class=\"anchor\" href=\"#location-of-dictionary-files\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Location of dictionary files\n      </h2>\n\n    <p id=\"location-of-dictionary-files:41d3b851\">\n      Carrot<sup>2</sup> Document Clustering Server (REST API) loads dictionaries\n      from an <a href=\"#location-of-dictionary-files:document-clustering-server\">explicit\n      non-configurable location</a> provided below.\n      The Java API does not dictate the location of these resources, but\n      comes with <a href=\"#location-of-dictionary-files:java-api\">reasonable\n      defaults</a> and a way to load them from a\n      <a href=\"/java-api-basics/#customizing-dictionaries\">custom location</a>.\n    </p>\n\n    <section id=\"location-of-dictionary-files:document-clustering-server\">\n      <h3>\n        <a class=\"anchor\" href=\"#location-of-dictionary-files:document-clustering-server\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Document Clustering Server\n      </h3>\n\n      <p id=\"location-of-dictionary-files:document-clustering-server:996448f2\">\n        The Document Clustering Server reads dictionary files from the\n        <code>web/service/resources</code> directory in the server's distribution\n        directory. For changes applied to dictionary files to take effect, you need to\n        restart the Document Clustering Server.\n      </p>\n    </section>\n\n    <section id=\"location-of-dictionary-files:java-api\">\n      <h3>\n        <a class=\"anchor\" href=\"#location-of-dictionary-files:java-api\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java API\n      </h3>\n\n      <p id=\"location-of-dictionary-files:java-api:e304341d\">\n        By default, Carrot<sup>2</sup> Java API will try to read dictionaries\n        from the JAR file from which the supplier of its corresponding\n        <code>LanguageComponents</code> implementation comes from. The following\n        table presents source JARs and their resource package\n        for the languages of the standard Carrot<sup>2</sup> distribution.\n      </p>\n\n      <figure id=\"dictionaries:source-jar\" class=\"dictionaries\">\n        <table>\n          <thead>\n          <tr>\n            <th>Language(s)</th>\n            <th>JAR path (package)</th>\n            <th>JAR</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <td>\n              Dutch,\n              English,\n              Finnish,\n              French,\n              German,\n              Hungarian,\n              Italian,\n              Norwegian,\n              Portuguese,\n              Romanian,\n              Russian,\n              Spanish,\n              Swedish,\n              Turkish\n            </td>\n            <td><code>org/carrot2/language</code></td>\n            <td style=\"white-space: pre\"><code>carrot2-core-4.7.0.jar</code></td>\n          </tr>\n          <tr>\n            <td>\n              Arabic,\n              Armenian,\n              Brazilian,\n              Bulgarian,\n              Croatian,\n              Czech,\n              Estonian,\n              Galician,\n              Greek,\n              Hindi,\n              Indonesian,\n              Irish,\n              Latvian,\n              Lithuanian,\n              Thai\n            </td>\n            <td><code>org/carrot2/language/extras</code></td>\n            <td><code>carrot2-lang-lucene-4.7.0.jar</code></td>\n          </tr>\n          <tr>\n            <td>\n              Chinese-Simplified,\n              Chinese-Traditional\n            </td>\n            <td><code>org/carrot2/language/chinese</code></td>\n            <td><code>carrot2-lang-lucene-chinese-4.7.0.jar</code></td>\n          </tr>\n          <tr>\n            <td>\n              Japanese\n            </td>\n            <td><code>org/carrot2/language/japanese</code></td>\n            <td><code>carrot2-lang-lucene-japanese-4.7.0.jar</code></td>\n          </tr>\n          <tr>\n            <td>\n              Korean\n            </td>\n            <td><code>org/carrot2/language/korean</code></td>\n            <td><code>carrot2-lang-lucene-korean-4.7.0.jar</code></td>\n          </tr>\n          <tr>\n            <td>\n              Polish\n            </td>\n            <td><code>org/carrot2/language/polish</code></td>\n            <td><code>carrot2-lang-polish-4.7.0.jar</code></td>\n          </tr>\n          </tbody>\n        </table>\n        <figcaption>\n          <p>\n            Location of dictionary resources for a corresponding languages in the standard\n            Carrot<sup>2</sup> distribution.\n          </p>\n        </figcaption>\n      </figure>\n\n      <p id=\"location-of-dictionary-files:java-api:f2c0f82d\">\n        Note that you should not modify the default dictionaries in-place.\n        Instead, copy the relevant dictionaries to your application-specific\n        location and <a href=\"/java-api-basics/#customizing-dictionaries\">load\n        them from that location</a>.\n      </p>\n    </section>\n  </section>\n\n  <section id=\"syntax\">\n    <h2>\n        <a class=\"anchor\" href=\"#syntax\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Syntax\n      </h2>\n\n    <p id=\"syntax:8cca8609\">\n      Both the word- and label filter dictionaries use a common syntax based on\n      <em>matchers</em>. An example word or label filter dictionary is shown below.\n    </p>\n\n    <figure>\n      <pre><code data-language=\"json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">\"exact\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">\"Literal case-sensitive match\"</span>\n  <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">\"glob\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">\"starts with phrase *\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">\"* contains words *\"</span>\n  <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">\"regexp\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">\"(?).+BadLabel.+\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">\"(?)^[0-9]\\\\s*.*\"</span>\n  <span class=\"hljs-punctuation\">]</span>\n<span class=\"hljs-punctuation\">}</span></code></pre>\n      <figcaption>\n        <p>\n          An example word or label filter dictionary with entries of three\n          different matcher types.\n        </p>\n      </figcaption>\n    </figure>\n\n    <p id=\"syntax:faa8eac3\">\n      A matcher entry is a description of how to determine whether a word or label should\n      be filtered out. The <code>exact</code>, <code>glob</code> and\n      <code>regexp</code> properties are optional and can contain an array\n      of string entries for the specific matcher types, described in the following\n      sections. If a word or a label matches <em>any</em> matcher of any type, it will\n      be filtered out.\n    </p>\n\n    <div class=\"warning\" id=\"syntax:876bc41c\">\n      <strong>Heads up, word and label character case!</strong>\n\n      <p id=\"syntax:edb42286\">\n        When performing <strong>word filtering</strong>, Carrot<sup>2</sup> will\n        check the <strong>lower-cased</strong> version of each word against\n        the dictionary. This is to make it easy to paste a lower-cased\n        list of stop words into the dictionary. This also means that\n        mixed-case entries will never match any input word.\n      </p>\n\n      <p id=\"syntax:9acb6893\">\n        On the other hand, when performing <strong>label filtering</strong>,\n        Carrot<sup>2</sup> will use the <strong>case sensitive</strong> version\n        of the label, as produced by the clustering algorithm. This means that\n        your label filtering entries must take character case into account\n        or use a matcher type which is oblivious of character case, such as the\n        <a href=\"#syntax:glob-matcher\"><code>glob</code></a> matcher.\n      </p>\n    </div>\n\n    <section id=\"syntax:exact-matcher\">\n      <h3>\n        <a class=\"anchor\" href=\"#syntax:exact-matcher\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exact matcher\n      </h3>\n\n      <p id=\"syntax:exact-matcher:72656ad7\">\n        Exact matchers require <strong>exact, case-sensitive</strong> equality between the word\n        or phrase and the dictionary entry. Exact matcher entries are fast\n        to parse and very fast to apply during clustering.\n      </p>\n\n      <figure>\n        <pre><code data-language=\"json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">\"exact\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">\"DevOps\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">\"Windows 2000\"</span>\n  <span class=\"hljs-punctuation\">]</span>\n<span class=\"hljs-punctuation\">}</span></code></pre>\n        <figcaption>\n          <p>\n            An example label filter dictionary with two <code>exact</code> matcher entries.\n          </p>\n        </figcaption>\n      </figure>\n\n      <p id=\"syntax:exact-matcher:d084405a\">\n        The above label dictionary definitions will match labels <em>DevOps</em> and\n        <em>Windows 2000</em>, but will not match <em>Devops</em> or\n        <em>Windows 2000 machine</em>.\n      </p>\n\n      <p id=\"syntax:exact-matcher:f34d5963\">\n        For case-insensitive matching, use <a href=\"#syntax:glob-matcher\">glob matchers</a>\n        (preferably) or case-insensitive <a href=\"#syntax:regular-expression-matcher\">regular\n        expression matchers</a>.\n      </p>\n    </section>\n\n    <section id=\"syntax:glob-matcher\">\n      <h3>\n        <a class=\"anchor\" href=\"#syntax:glob-matcher\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Glob matcher\n      </h3>\n\n      <p id=\"syntax:glob-matcher:9e52e3a0\">\n        Glob matcher allows simple word-based wildcard matching.\n        The primary use case of the glob matcher is case-insensitive\n        matching of literal phrases, as well as \"begins with…\",\n        \"ends with…\" or \"contains…\" types of expressions.\n        Glob matcher entries are fast to parse and very fast to apply.\n      </p>\n\n      <figure>\n        <pre><code data-language=\"json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">\"glob\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">\"more information\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">\"more information *\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">\"* about *\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">\"big ?\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">\"+ apple\"</span>\n  <span class=\"hljs-punctuation\">]</span>\n<span class=\"hljs-punctuation\">}</span></code></pre>\n        <figcaption>\n          <p>\n            An example label filter dictionary with <code>glob</code> matcher entries.\n          </p>\n        </figcaption>\n      </figure>\n\n\n      <section id=\"syntax:glob-matcher:matching-rules\">\n        <h4>\n        <a class=\"anchor\" href=\"#syntax:glob-matcher:matching-rules\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Matching rules\n      </h4>\n\n        <ul>\n          <li>\n            <p id=\"syntax:glob-matcher:matching-rules:04e647c0\">\n              Each entry must consist of one or more space-separated tokens.\n            </p>\n          </li>\n          <li>\n            <p id=\"syntax:glob-matcher:matching-rules:37e132b9\">\n              A token is a sequence of arbitrary characters, such as words, numbers, identifiers.\n            </p>\n          </li>\n          <li>\n            <p id=\"syntax:glob-matcher:matching-rules:57b5220f\">\n              Matching is case-insensitive by default. Letter case normalization is performed based\n              on the <code>ROOT</code> Java locale, which performs language-neutral\n              case conflation according to Unicode rules.\n            </p>\n          </li>\n          <li>\n            <p id=\"syntax:glob-matcher:matching-rules:3549dd48\">\n              A token put in single or double quotes, for example <code>\"Rating***\"</code> is taken literally: matching\n              is case-sensitive, <code>*</code> character inside quoted tokens is allowed and compared literally.\n            </p>\n          </li>\n          <li>\n            <p id=\"syntax:glob-matcher:matching-rules:c3d59a05\">\n              To include quote characters in the token, escape them with the <code>\\</code> character,\n              for example: <code>\\\"information\\\"</code>.\n            </p>\n          </li>\n          <li>\n            <p id=\"syntax:glob-matcher:matching-rules:08c7f53f\">\n              The following wildcard-matching tokens are recognized:\n            </p>\n            <ul>\n              <li>\n                <p id=\"syntax:glob-matcher:matching-rules:363759af\">\n                  The <code>?</code> token matches exactly one (any) word (possessive operator).\n                </p>\n              </li>\n              <li>\n                <p id=\"syntax:glob-matcher:matching-rules:5a0c863a\">\n                  The <code>*</code> token matches zero or more words (possessive operator).\n                </p>\n              </li>\n              <li>\n                <p id=\"syntax:glob-matcher:matching-rules:26d59088\">\n                  The <code>*?</code> token matches zero or more words (reluctant operator).\n                </p>\n              </li>\n              <li>\n                <p id=\"syntax:glob-matcher:matching-rules:9b3a479f\">\n                  The <code>+</code> token matches one or more words (possessive operator). This operator\n                  is functionally equivalent to: <code>? *</code>.\n                </p>\n              </li>\n              <li>\n                <p id=\"syntax:glob-matcher:matching-rules:1167506b\">\n                  The <code>+?</code> token matches one or more words (reluctant operator). This operator\n                  is functionally equivalent to: <code>? *?</code>.\n                </p>\n              </li>\n            </ul>\n\n            <p id=\"syntax:glob-matcher:matching-rules:727d90b1\">\n              A few restrictions apply to wildcard operators.\n            </p>\n            <ul>\n              <li>\n                <p id=\"syntax:glob-matcher:matching-rules:1aeabcc7\">\n                  Wildcard characters (<code>*</code>, <code>+</code>) cannot be used to express prefixes or suffixes.\n                  For example, <code>programm*</code>, is not supported.\n                </p>\n              </li>\n              <li>\n                <p id=\"syntax:glob-matcher:matching-rules:47f84901\">\n                  <code>*?</code> and <code>+?</code> wildcards are <em>reluctant</em> matchers in\n                  regular expression matching sense: that is, they match the <em>minimal</em>\n                  sequence of tokens until the next token in the pattern.\n                </p>\n              </li>\n              <li>\n                <p id=\"syntax:glob-matcher:matching-rules:64156a8b\">\n                  <code>*</code> and <code>+</code> wildcards are <em>possessive</em> matchers in\n                  regular expression matching sense: that is, they match the <em>maximum</em>\n                  sequence of tokens until the next token in the pattern.\n                </p>\n              </li>\n              <li>\n                <p id=\"syntax:glob-matcher:matching-rules:24777fde\">\n                  Greedy operators are not supported.\n                </p>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </section>\n\n      <section id=\"syntax:glob-matcher:example-entries\">\n        <h4>\n        <a class=\"anchor\" href=\"#syntax:glob-matcher:example-entries\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example entries\n      </h4>\n\n        <p id=\"syntax:glob-matcher:example-entries:d921a8cc\">\n          The following table shows a number of example glob entries. The\n          \"Non-matching strings\" column also has an explanation why there is no\n          match.\n        </p>\n\n        <table class=\"glob-examples\">\n          <thead>\n          <tr>\n            <th>Entry</th>\n            <th>Matching strings</th>\n            <th>Non-matching strings</th>\n          </tr>\n          </thead>\n\n          <tbody>\n          <tr>\n            <td><code>more&nbsp;information</code></td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:ab066b32\"><code>More information</code></p>\n              <p id=\"syntax:glob-matcher:example-entries:d30f8dc5\"><code>MORE INFORMATION</code></p>\n            </td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:e0165604\"><code>more informations</code><span class=\"explanation\">'informations' does not match pattern token 'information'.</span></p>\n              <p id=\"syntax:glob-matcher:example-entries:52b8ae83\"><code>more information about</code><span class=\"explanation\">Pattern does not contain wildards, only 2-word strings can match.</span></p>\n              <p id=\"syntax:glob-matcher:example-entries:c647e010\"><code>some more information</code><span class=\"explanation\">Pattern does not contain wildards, only 2-word strings can match.</span></p>\n            </td>\n          </tr>\n\n          <tr>\n            <td><code>more&nbsp;information&nbsp;*</code></td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:5dc731e4\"><code>more information</code></p>\n              <p id=\"syntax:glob-matcher:example-entries:2614416e\"><code>More information about</code></p>\n              <p id=\"syntax:glob-matcher:example-entries:81198629\"><code>More information about a</code></p>\n            </td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:e0165604_0\"><code>more informations</code><span class=\"explanation\">'informations' does not match pattern token 'information'.</span></p>\n              <p id=\"syntax:glob-matcher:example-entries:16591acc\"><code>more informations about</code><span class=\"explanation\">'informations' does not match pattern token 'information'.</span></p>\n              <p id=\"syntax:glob-matcher:example-entries:f05d18b0\"><code>some more information</code><span class=\"explanation\">Pattern does not have wildcards at the beginning, matching strings must start with 'more information'.</span></p>\n            </td>\n          </tr>\n\n          <tr>\n            <td><code>*&nbsp;information&nbsp;*</code></td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:bb3ccd58\"><code>information</code></p>\n              <p id=\"syntax:glob-matcher:example-entries:5dc731e4_0\"><code>more information</code></p>\n              <p id=\"syntax:glob-matcher:example-entries:a9e1d3d8\"><code>information about</code></p>\n              <p id=\"syntax:glob-matcher:example-entries:2d041f7f\"><code>a lot more information on</code></p>\n            </td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:1ad2b95b\"><code>informations</code><span class=\"explanation\">'informations' does not match pattern token 'information'.</span></p>\n              <p id=\"syntax:glob-matcher:example-entries:16591acc_0\"><code>more informations about</code><span class=\"explanation\">'informations' does not match pattern token 'information'.</span></p>\n              <p id=\"syntax:glob-matcher:example-entries:85b07f9c\"><code>some more informations</code><span class=\"explanation\">'informations' does not match pattern token 'information'.</span></p>\n            </td>\n          </tr>\n\n          <tr>\n            <td><code>+&nbsp;information</code></td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:b3bd2b31\"><code>too much information</code></p>\n              <p id=\"syntax:glob-matcher:example-entries:5dc731e4_1\"><code>more information</code></p>\n            </td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:fc3d8500\"><code>information</code><span class=\"explanation\"><code>+</code> wildcard requires at least one word before 'information'.</span></p>\n              <p id=\"syntax:glob-matcher:example-entries:afff4bdb\"><code>more information about</code><span class=\"explanation\">'about' is an extra word not covered by the pattern.</span></p>\n            </td>\n          </tr>\n\n          <tr>\n            <td><code>\"Information\"&nbsp;*</code></td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:a82be0f5\"><code>Information</code></p>\n              <p id=\"syntax:glob-matcher:example-entries:2aa615aa\"><code>Information about</code></p>\n              <p id=\"syntax:glob-matcher:example-entries:480c8a65\"><code>Information ABOUT</code></p>\n            </td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:296b0f04\"><code>information</code><span class=\"explanation\">\"Information\" token is case-sensitive, it does not match 'information'.</span></p>\n              <p id=\"syntax:glob-matcher:example-entries:a71a921e\"><code>information about</code><span class=\"explanation\">\"Information\" token is case-sensitive, it does not match 'information'.</span></p>\n              <p id=\"syntax:glob-matcher:example-entries:c48fb3e8\"><code>Informations about</code><span class=\"explanation\">'Informations' does not match pattern token \"Information\".</span></p>\n            </td>\n          </tr>\n\n          <tr>\n            <td><code>data ?</code></td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:dea0a476\"><code>data mining</code></p>\n            </td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:89c16552\"><code>data</code><span class=\"explanation\"><code>?</code> operator requires a word after \"data\".</span></p>\n              <p id=\"syntax:glob-matcher:example-entries:4d65556c\"><code>data mining research</code><span class=\"explanation\">\"research\" token does not match the pattern.</span></p>\n            </td>\n          </tr>\n\n          <tr>\n            <td><code>\"Programm*\"</code></td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:b73b9842\"><code>Programm*</code></p>\n            </td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:1dbd19d5\"><code>Programmer</code><span class=\"explanation\">\"Programm*\" token is taken literally, it matches only 'Programm*'.</span></p>\n              <p id=\"syntax:glob-matcher:example-entries:caf4b775\"><code>Programming</code><span class=\"explanation\">\"Programm*\" token is taken literally, it matches only 'Programm*'.</span></p>\n            </td>\n          </tr>\n\n          <tr>\n            <td><code>\\\"information\\\"</code></td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:e976bd9f\"><code>\"information\"</code></p>\n              <p id=\"syntax:glob-matcher:example-entries:3c2de4ff\"><code>\"INFOrmation\"</code><span class=\"explanation\">Escaped quotes are taken literally, so match is case-insensitive</span></p>\n            </td>\n            <td>\n              <p id=\"syntax:glob-matcher:example-entries:d17bb777\"><code>information</code><span class=\"explanation\">Escaped quotes not found in the string being matched.</span></p>\n              <p id=\"syntax:glob-matcher:example-entries:12b47cfd\"><code>\"information</code><span class=\"explanation\">Escaped quotes not found in the string being matched.</span></p>\n            </td>\n          </tr>\n\n          <tr>\n            <td><code>programm*</code></td>\n            <td colspan=\"2\">\n              Illegal pattern, combinations of the <code>*</code> wildcard and other characters\n              are not supported.\n            </td>\n          </tr>\n\n          <tr>\n            <td><code>\"information</code></td>\n            <td colspan=\"2\">\n              Illegal pattern, unbalanced double quotes.\n            </td>\n          </tr>\n\n          <tr>\n            <td><code>*</code></td>\n            <td colspan=\"2\">\n              Illegal pattern, there must be at least one non-wildcard token.\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </section>\n\n    </section>\n\n    <section id=\"syntax:regular-expression-matcher\">\n      <h3>\n        <a class=\"anchor\" href=\"#syntax:regular-expression-matcher\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Regular expression matcher\n      </h3>\n\n      <p id=\"syntax:regular-expression-matcher:a45305e4\">\n        The regular expression matcher checks words or labels against a list\n        of regular expressions you provide.\n      </p>\n\n      <figure>\n        <pre><code data-language=\"json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">\"regexp\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-string\">\"Windows 9[58]\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-string\">\"(?)^[0-9]\\\\s*.*\"</span>\n  <span class=\"hljs-punctuation\">]</span>\n<span class=\"hljs-punctuation\">}</span></code></pre>\n        <figcaption>\n          <p>\n            An example label filter dictionary with two <code>regexp</code> matcher entries.\n          </p>\n        </figcaption>\n      </figure>\n\n      <p id=\"syntax:regular-expression-matcher:2787b757\">\n        The regular expressions must follow\n        <a target=\"_blank\" href=\"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/regex/Pattern.html\">Java syntax</a>.\n        If any fragment of a word or label matches any regular expression\n        provided in the dictionary, the word or label will be filtered out.\n      </p>\n\n      <div class=\"warning\" id=\"syntax:regular-expression-matcher:ebc2d966\">\n        <strong>Heads up, performance impact!</strong>\n\n        <p id=\"syntax:regular-expression-matcher:61ca25ab\">\n          Regular expression-based matching is a powerful mechanism, but\n          it can also result in a dramatic decrease of clustering performance.\n          Therefore, it should be used only when a similar effect cannot be\n          achieved by reasonable number of\n          <a href=\"#syntax:exact-matcher\"><code>exact</code></a>\n          and <a href=\"#syntax:glob-matcher\"><code>glob</code></a> matching entries.\n        </p>\n      </div>\n    </section>\n  </section>\n\n  <section id=\"per-request-and-ephemeral-dictionaries\">\n    <h2>\n        <a class=\"anchor\" href=\"#per-request-and-ephemeral-dictionaries\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Per-request dictionaries\n      </h2>\n\n    <p id=\"per-request-and-ephemeral-dictionaries:b17d8e82\">\n      In some contexts, it may be desirable to apply additional label\n      or word exclusions for a specific clustering request. One example is\n      allowing the users to interactively tune the exclusions directory\n      while observing the results in real time.\n    </p>\n\n    <p id=\"per-request-and-ephemeral-dictionaries:66e7dfa2\">\n      Providing per-request dictionaries is possible both in the Java API,\n      where the <a href=\"/java-language-components/#ephemeral-dictionaries\">\n      ephemeral dictionaries</a> is a better term, and in the\n      <a href=\"/rest-api-basics/#per-request-dictionaries\">REST API</a>.\n      In both cases, the available set of filters and matcher syntax is the same\n      as described in this section. The per-request dictionaries are added\n      on top of the existing dictionary files.\n    </p>\n\n    <p id=\"per-request-and-ephemeral-dictionaries:695d93b0\">\n      Please note that using per-request dictionaries will incur an extra\n      performance cost associated with parsing the provided dictionary entries.\n      In case of interactive label exclusion tuning, you may want to transfer\n      the newly created dictionary entries to the main dictionary file,\n      so that the exclusions apply for all further clustering requests.\n    </p>\n  </section>\n</article>","tableOfContents":[{"heading":"Types of dictionaries","anchor":"types-of-dictionaries"},{"heading":"Location of dictionary files","anchor":"location-of-dictionary-files","sections":[{"heading":"Document Clustering Server","anchor":"location-of-dictionary-files:document-clustering-server"},{"heading":"Java API","anchor":"location-of-dictionary-files:java-api"}]},{"heading":"Syntax","anchor":"syntax","sections":[{"heading":"Exact matcher","anchor":"syntax:exact-matcher"},{"heading":"Glob matcher","anchor":"syntax:glob-matcher","sections":[{"heading":"Matching rules","anchor":"syntax:glob-matcher:matching-rules"},{"heading":"Example entries","anchor":"syntax:glob-matcher:example-entries"}]},{"heading":"Regular expression matcher","anchor":"syntax:regular-expression-matcher"}]},{"heading":"Per-request dictionaries","anchor":"per-request-and-ephemeral-dictionaries"}]}},"pageContext":{"slug":"/dictionaries/"}},"staticQueryHashes":["2081922839"]}