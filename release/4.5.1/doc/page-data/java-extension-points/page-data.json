{"componentChunkName":"component---node-modules-carrotsearch-gatsby-theme-apidocs-templates-documentation-page-js","path":"/java-extension-points/","result":{"data":{"site":{"siteMetadata":{"title":"Carrot2 docs","description":"User and developer manual for the Carrot2 text clustering engine.","lang":"en","indexAlias":"/hello-carrot2/"}},"html":{"frontmatter":{"id":"java-extension-points","title":"Extension Points"},"html":"<article>\n  <h1>Extension Points</h1>\n\n  <p id=\"1ca0d982\">\n    This article discusses dynamic discovery of available Carrot<sup>2</sup> components via\n    service extension points.\n  </p>\n\n  <p id=\"6d13fa3c\">\n    Many Carrot<sup>2</sup> components, including algorithms, language components and\n    their building blocks, are implemented as\n    service extension points. While they can be referenced directly using explicit class\n    names (<code>new LingoClusteringAlgorithm()</code>), you can also\n    enumerate and inspect their properties dynamically.\n  </p>\n\n  <p id=\"ae6d4259\">\n    The following code enumerates\n    all available algorithm providers, checks if the given algorithm supports the English language\n    and clusters the same stream of documents repeatedly.\n  </p>\n\n  <pre><code data-language=\"java\">List&lt;ClusteringAlgorithmProvider&gt; providers =\n    ServiceLoader.load(ClusteringAlgorithmProvider.class).stream()\n        .map(Provider::get)\n        .collect(Collectors.toList());\n\n<span class=\"hljs-keyword\">for</span> (ClusteringAlgorithmProvider provider : providers) {\n  System.out.println(<span class=\"hljs-string\">\"Clustering algorithm: \"</span> + provider.name() + <span class=\"hljs-string\">\"\\n\"</span>);\n  <span class=\"hljs-type\">ClusteringAlgorithm</span> <span class=\"hljs-variable\">algorithm</span> <span class=\"hljs-operator\">=</span> provider.get();\n  <span class=\"hljs-keyword\">if</span> (algorithm.supports(english)) {\n    List&lt;Cluster&lt;Document&gt;&gt; clusters =\n        algorithm.cluster(ExamplesData.documentStream(), english);\n    ExamplesCommon.printClusters(clusters);\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">name</span> <span class=\"hljs-operator\">=</span> english.language();\n    System.out.println(<span class=\"hljs-string\">\"  (Language not supported: \"</span> + name + <span class=\"hljs-string\">\").\"</span>);\n  }\n}</code></pre>\n\n  <p id=\"650d37c2\">\n    A similar service extension point exists for language component providers, this time\n    we use a facade method that does additional sanity checks for us\n    before returning the result:\n  </p>\n\n  <pre><code data-language=\"java\">System.out.println(\n    <span class=\"hljs-string\">\"Language components for the following languages are available:\\n  \"</span>\n        + String.join(<span class=\"hljs-string\">\", \"</span>, LanguageComponents.loader().load().languages()));</code></pre>\n</article>","tableOfContents":[]}},"pageContext":{"slug":"/java-extension-points/"}},"staticQueryHashes":["2081922839"]}