{"componentChunkName":"component---node-modules-carrotsearch-gatsby-plugin-apidocs-dist-templates-documentation-page-js","path":"/dcs-language-components/","webpackCompilationHash":"df295562bc487994a04a","result":{"data":{"html":{"frontmatter":{"id":"dcs-language-components","title":"Language Components"},"html":"<article>\n  <h1>Language Components</h1>\n\n  <p id=\"3245e7d9b372528a426c46b5\">\n    In this section we describe means to tune the language component resources in the\n    REST API (DCS).\n  </p>\n\n  <p id=\"f65c87884ded689ea9d629a8\">\n    The Java API <a href=\"/java-language-components/\">language components section</a>\n    already introduced the role and importance of tuning language components properly. It also\n    introduced <a href=\"/java-language-components/#tweaking-lexical-data-resources\">standard\n    conventions for naming stop word resources</a> and dictionaries.\n  </p>\n\n  <p id=\"0e2bd6aed27f32d28e1cf3f8\">\n    In the REST API, all language resources are pulled out from Java JAR files and reside under the\n    <code>dcs/web/service/resources</code> path, relative to DCS distribution package.\n    To tune the stop words for the English language, for example, you'd modify the\n    <code>english.stopwords.utf8</code> file. To tweak corresponding label exclusion dictionaries,\n    you'd modify the <code>english.stoplabels.utf8</code> file.\n  </p>\n\n  <p class=\"warning\" id=\"4047e0ee2482cea4c74afb0c_0\">\n    Changes to language resource files are\n    not automatically detected or reloaded, a server restart is required for changes to take effect.\n  </p>\n</article>","tableOfContents":[]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/dcs-language-components/"}}}