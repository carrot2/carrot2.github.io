{"componentChunkName":"component---node-modules-carrotsearch-gatsby-theme-apidocs-templates-documentation-page-js","path":"/java-concurrency/","result":{"data":{"html":{"frontmatter":{"id":"java-concurrency","title":"Algorithms and Concurrency"},"html":"<article>\n  <h1>Algorithms and Concurrency</h1>\n\n  <p id=\"3f72171eacb7d841a4bd0d4d\">\n    This article discusses approaches and pitfalls of running clustering algorithms\n    in concurrent environments.\n  </p>\n\n  <section id=\"thread-safety\">\n    <h2>\n        <a class=\"anchor\" href=\"#thread-safety\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Thread-safety\n      </h2>\n\n    <p id=\"78d5cde114579473e7c5eb17\">\n      The following sentences explain the contracts required for concurrent use of\n      Carrot<sup>2</sup> Java API components:\n    </p>\n\n    <ul>\n      <li id=\"37766377d2d22c23d49784ba\"><strong>clustering algorithm instances are not thread-safe</strong> and cannot be used\n        by multiple threads in parallel,\n      </li>\n      <li id=\"2d563c3e24ad56ac0e623268\"><strong>language component instances are thread-safe</strong> and <strong>should</strong>\n        be used and reused by parallel threads.\n      </li>\n    </ul>\n\n    <p class=\"warning\" id=\"c9a48fb1b5147c160d67e7b3_0\">\n      Contrary to the 3.x line of Carrot<sup>2</sup>, the 4.x line has no \"managed\" support\n      for caching, reusing or managing concurrency of clustering algorithm instances\n      (previously provided by the <code>Controller</code> instance). This is a deliberate decision:\n      algorithm instances are lightweight (cheap to create and discard) and modern JVMs have much better\n      garbage collection mechanisms.\n    </p>\n\n    <p id=\"13b2961a215608c9e4b36973\">\n      The following sections of this article show how various approaches to configuring\n      the algorithm once and then reusing it in subsequent, possibly concurrent, clustering\n      calls.\n    </p>\n  </section>\n\n  <section id=\"ephemeral\">\n    <h2>\n        <a class=\"anchor\" href=\"#ephemeral\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Ephemeral instances\n      </h2>\n\n    <p id=\"6837d4d069b316ab148c2fbe\">\n      The simplest way to achieve thread-safety is to create the algorithm instance on the fly,\n      configure it appropriately and then discard it after the clustering completes. A simple pattern\n      here would be to create a function that transforms a stream of documents into a list\n      of clusters:\n    </p>\n\n    <div class=\"gatsby-highlight\">\n    <pre class=\"language-java\"><code data-language=\"java\"><span class=\"token class-name\">Function</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Stream</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Document</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cluster</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Document</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> processor <span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">(</span>documentStream<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Algorithm instances are created per-call (per-thread)</span>\n      <span class=\"token class-name\">LingoClusteringAlgorithm</span> algorithm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LingoClusteringAlgorithm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// ...configured in place</span>\n      algorithm<span class=\"token punctuation\">.</span>preprocessing<span class=\"token punctuation\">.</span>phraseDfThreshold<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// and discarded once clustering call completes.</span>\n      <span class=\"token keyword\">return</span> algorithm<span class=\"token punctuation\">.</span><span class=\"token function\">cluster</span><span class=\"token punctuation\">(</span>documentStream<span class=\"token punctuation\">,</span> english<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">runConcurrentClustering</span><span class=\"token punctuation\">(</span>processor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </div>\n\n    <p id=\"75f3a39d14a627ef000badda\">\n      An important assumption here is that the <code>LanguageComponents</code> object\n      (<code>english</code> in the example above) has been\n      initialized beforehand (once) and is reused. See the\n      <a href=\"/java-language-components/\">Language components</a> page for more information\n      on initialization and customization of language resources.\n    </p>\n  </section>\n\n\n  <section id=\"cloning\">\n    <h2>\n        <a class=\"anchor\" href=\"#cloning\" aria-hidden=\"true\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Cloning preconfigured instances\n      </h2>\n\n    <p id=\"5c028d054c050c1f6bc0ac03\">\n      Sometimes the configuration can become fairly complex. Clustering\n      algorithm instances can be converted into and recreated from a map, so\n      we can extract all the details from the preconfigured instance and\n      then <em>deep-clone</em> it on demand, as this example shows:\n    </p>\n\n    <div class=\"gatsby-highlight\">\n    <pre class=\"language-java\"><code data-language=\"java\"><span class=\"token comment\">// Apply any configuration tweaks once.</span>\n<span class=\"token class-name\">LingoClusteringAlgorithm</span> preconfigured <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LingoClusteringAlgorithm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npreconfigured<span class=\"token punctuation\">.</span>preprocessing<span class=\"token punctuation\">.</span>phraseDfThreshold<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npreconfigured<span class=\"token punctuation\">.</span>desiredClusterCount<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npreconfigured<span class=\"token punctuation\">.</span>matrixReducer<span class=\"token punctuation\">.</span>factorizationFactory <span class=\"token operator\">=</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">NonnegativeMatrixFactorizationKLFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Populate the map with algorithm and its attributes.</span>\n<span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> attrs <span class=\"token operator\">=</span> <span class=\"token class-name\">Attrs</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMap</span><span class=\"token punctuation\">(</span>preconfigured<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Reuse the previously populated map to create a new cloned instance.</span>\n<span class=\"token class-name\">Function</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Stream</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Document</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cluster</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Document</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> processor <span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">(</span>documentStream<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">ClusteringAlgorithm</span> cloned<span class=\"token punctuation\">;</span>\n      cloned <span class=\"token operator\">=</span> <span class=\"token class-name\">Attrs</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClusteringAlgorithm</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> attrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> cloned<span class=\"token punctuation\">.</span><span class=\"token function\">cluster</span><span class=\"token punctuation\">(</span>documentStream<span class=\"token punctuation\">,</span> english<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">runConcurrentClustering</span><span class=\"token punctuation\">(</span>processor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </div>\n  </section>\n</article>","tableOfContents":[{"heading":"Thread-safety","anchor":"thread-safety"},{"heading":"Ephemeral instances","anchor":"ephemeral"},{"heading":"Cloning preconfigured instances","anchor":"cloning"}]}},"pageContext":{"slug":"/java-concurrency/"}},"staticQueryHashes":["1164750013"]}